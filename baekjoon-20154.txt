// 그냥 반복문으로 처음부터 계산해도 무방했는데 데큐쓰고 난리도 아니였다
// 두번 째 풀이 참고..

import java.io.*;
import java.util.ArrayDeque;
import java.util.Deque;

public class Main {
    private static BufferedReader br;
    private static BufferedWriter bw;

    public static void main(String[] args) throws IOException {
        br = new BufferedReader(new InputStreamReader(System.in));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        /*
        * 1 <= K(S.length) <= 1_000_000
        * K가 1. 홀수인 경우 ? 마지막 값을 빼고 짝수인 경우로 처리해주면 되고
        *     2. 짝수인 경우 ? 두 개씩 나누어 떨어지니까 처리해주면 되고
        *
        A	B	C	D	E	F	G	H	I	J	K	L	M	N	O	P	Q	R	S	T	U	V	W	X	Y	Z
        3	2	1	2	3	3	3	3	1	1	3	1	3	3	1	2	2	2	1	2	1	1	2	2	2	1
        *
        * 재귀 ? : X
        * 이분탐색 ? X : 앞에서부터 값을 가지고 가야하니까
        * */

        int[] strokes = {3, 2, 1, 2, 3,	3, 3, 3, 1,	1,	3,	1,	3,	3,	1,	2,	2,	2,	1,	2,	1,	1,	2,	2,	2,	1}; // 알파벳 별 획수
        String input = br.readLine();

        Deque<Integer> deque = new ArrayDeque<>();
        for(char c : input.toCharArray())
            deque.offer(strokes[c-'A']);

        int size = deque.size();
        while(size != 1){
            int pre;
            int cur;

            if(size % 2 == 0){
                for(int i=0; i<size; i+=2){
                    pre = deque.pollFirst();
                    cur = deque.pollFirst();

                    deque.offerLast(pre+cur);
                }
            } else{
                for(int i=0; i<size-1; i+=2){
                    pre = deque.pollFirst();
                    cur = deque.pollFirst();

                    deque.offerLast(pre+cur);
                }
                deque.offerLast(deque.pollFirst());
            }

            size = deque.size();
        }

        if(deque.peek() % 2 == 0) bw.write("You're the winner?");
        else bw.write("I'm a winner!");

        bw.flush();
        br.close();
        bw.close();
    }
}

// 두번 째 풀이

import java.io.*;

public class Main {
    private static BufferedReader br;
    private static BufferedWriter bw;

    public static void main(String[] args) throws IOException {
        br = new BufferedReader(new InputStreamReader(System.in));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int[] strokes = {3, 2, 1, 2, 3,	3, 3, 3, 1,	1,	3,	1,	3,	3,	1,	2,	2,	2,	1,	2,	1,	1,	2,	2,	2,	1}; // 알파벳 별 획수
        String input = br.readLine();
        int val = 0;

        for(int i=0; i<input.length(); i++) val += strokes[input.charAt(i)-'A'];
        val = val > 10 ? val % 10 : val;
        bw.write(val % 2 == 0 ? "You're the winner?" : "I'm a winner!");

        bw.flush();
        br.close();
        bw.close();
    }
}
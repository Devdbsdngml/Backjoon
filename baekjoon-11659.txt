// 첫번째 풀이 TLE
// N과 M이 최대 10만까지라 이중 포문을 사용하면 당연히 워후~

import java.io.*;
import java.util.StringTokenizer;

public class Main{
    private static BufferedReader br;
    private static BufferedWriter bw;

    public static void main(String[] args) throws IOException {
        br = new BufferedReader(new InputStreamReader(System.in));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int N = Integer.parseInt(st.nextToken()); // 수의 개수
        int M = Integer.parseInt(st.nextToken()); // 합을 구해야 하는 횟수
        int[] arr = new int[N];

        st = new StringTokenizer(br.readLine());
        for(int i=0; i<N; i++){
            arr[i] = Integer.parseInt(st.nextToken());
        }

        StringBuilder ans = new StringBuilder();

        while(M-- > 0){
            st = new StringTokenizer(br.readLine());
            int start = Integer.parseInt(st.nextToken());
            int end = Integer.parseInt(st.nextToken());

            int tmp = 0;
            for(int i=start-1; i<end; i++){
                tmp += arr[i];
            }
            ans.append(tmp+"\n");
        }
        ans.deleteCharAt(ans.length()-1);
        bw.write(ans.toString());

        br.close();
        bw.flush();
        bw.close();
    }
}

// 누적합 ?
import java.io.*;
import java.util.StringTokenizer;

public class Main{
    private static BufferedReader br;
    private static BufferedWriter bw;

    public static void main(String[] args) throws IOException {
        br = new BufferedReader(new InputStreamReader(System.in));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int N = Integer.parseInt(st.nextToken()); // 수의 개수
        int M = Integer.parseInt(st.nextToken()); // 합을 구해야 하는 횟수
        int[] arr = new int[N+1];

        // 배열에 값을 더해서 누적합을 만들어
        st = new StringTokenizer(br.readLine());
        for(int i=1; i<N+1; i++){
            arr[i] = arr[i-1] + Integer.parseInt(st.nextToken());
        }

        while(M-- > 0){
            st = new StringTokenizer(br.readLine());
            int start = Integer.parseInt(st.nextToken());
            int end = Integer.parseInt(st.nextToken());
            bw.write(arr[end]-arr[start-1]+"\n");
        }

        br.close();
        bw.flush();
        bw.close();
    }
}
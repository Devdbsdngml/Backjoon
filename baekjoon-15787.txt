// 비트마스크를 제대로 이해하지 못함

import java.io.*;
import java.util.HashSet;
import java.util.StringTokenizer;

public class Main{
    private static BufferedReader br;
    private static BufferedWriter bw;

    public static void main(String[] args) throws IOException {
        br = new BufferedReader(new InputStreamReader(System.in));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int N = Integer.parseInt(st.nextToken()); // 기차의 수
        int M = Integer.parseInt(st.nextToken()); // 명령의 수

        int[][] trains = new int[N+1][21];
        /*

        1 i x : i번째 기차에(1 ≤ i ≤ N) x번째 좌석에(1 ≤ x ≤ 20) 사람을 태워라. 이미 사람이 타있다면 , 아무런 행동을 하지 않는다.
        2 i x : i번째 기차에 x번째 좌석에 앉은 사람은 하차한다. 만약 아무도 그자리에 앉아있지 않았다면, 아무런 행동을 하지 않는다.
        3 i : i번째 기차에 앉아있는 승객들이 모두 한칸씩 뒤로간다. k번째 앉은 사람은 k+1번째로 이동하여 앉는다. 만약 20번째 자리에 사람이 앉아있었다면 그 사람은 이 명령 후에 하차한다.
        4 i : i번째 기차에 앉아있는 승객들이 모두 한칸씩 앞으로간다. k번째 앉은 사람은 k-1 번째 자리로 이동하여 앉는다. 만약 1번째 자리에 사람이 앉아있었다면 그 사람은 이 명령 후에 하차한다.

         */
        for(int i=0; i<M; i++){
            st = new StringTokenizer(br.readLine());
            int cmd = Integer.parseInt(st.nextToken());
            int trainNum = 0;
            if(cmd == 1 || cmd == 2){
                trainNum = Integer.parseInt(st.nextToken());
                int x = Integer.parseInt(st.nextToken());
                if(cmd == 1 && trains[trainNum][x] == 0){
                    trains[trainNum][x] = 1;
                } else if(cmd == 2 && trains[trainNum][x] == 1){
                    trains[trainNum][x] = 0;
                }
            } else if(cmd == 3){
                trainNum = Integer.parseInt(st.nextToken());
                for(int j=20; j>1; j--){
                    trains[trainNum][j] = trains[trainNum][j-1];
                }
                trains[trainNum][1] = 0;
            } else if(cmd == 4){
                trainNum = Integer.parseInt(st.nextToken());
                for(int j=1; j<20; j++){
                    trains[trainNum][j] = trains[trainNum][j+1];
                }
                trains[trainNum][20] = 0;
            }
        }

        StringBuilder sb;
        HashSet<String> hs = new HashSet<>();
        for(int i=1; i<N+1; i++){
            sb = new StringBuilder();
            for(int j=1; j<21; j++){
                sb.append(trains[i][j]);
            }
            hs.add(sb.toString());
        }

        bw.write(""+hs.size());

        bw.flush();
        br.close();
        bw.close();
    }
}
import java.util.*;
import java.io.*;

public class Main{
    public static void main(String[] args)throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st;
        
        st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());
        int[] trees = new int[n];
        
        st = new StringTokenizer(br.readLine());
        for(int i=0; i<n; i++){
            trees[i] = Integer.parseInt(st.nextToken());
        }
        bw.write(String.valueOf(solution(n, m, trees)));
        bw.flush();
    }
    public static long solution(int n, int m, int[] trees){
        Arrays.sort(trees);
        
        long left = 0;
        long right = trees[n-1];
        
        while(right >= left){
            long mid = (left+right) / 2;
            long sum = 0;
            for(int i=0; i<n; i++){
                if(trees[i] - mid > 0)
                    sum += trees[i] - mid;
            }
            
            if(sum < m)
                right = mid - 1;
            else if(sum >= m)
                left = mid + 1;
        }
        return right;
    }
}
import java.io.*;
import java.util.StringTokenizer;

public class Main{
    private static BufferedReader br;
    private static BufferedWriter bw;

    private static int n;
    private static int m;
    private static int[][] cities;

    private static final int maxCost = 10_000_001;

    public static void main(String[] args) throws IOException {
        br = new BufferedReader(new InputStreamReader(System.in));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st;

        n = Integer.parseInt(br.readLine()); // 도시의 개수 2 <= n <= 100
        m = Integer.parseInt(br.readLine()); // 버스의 개수 1 <= m <= 100,000
        cities = new int[n+1][n+1];

        // 시작도시와 도착도시가 같은 경우가 없다 : i == j = 0
        for(int i=1; i<=n; i++){
            for(int j=1; j<=n; j++){
                if(i == j) cities[i][j] = 0;
                else cities[i][j] = maxCost;
            }
        }

        for(int i=0; i<m; i++){
            st = new StringTokenizer(br.readLine());

            int from = Integer.parseInt(st.nextToken());
            int to = Integer.parseInt(st.nextToken());
            int cost = Integer.parseInt(st.nextToken());
            // 최소 비용이기 때문에 ex ([1, 4, 2] 와 [1, 4, 1] 중 후자가 들어가야됨) 
            if(cities[from][to] > cost) cities[from][to] = cost;
        }

        floydWarshall();
        printArr(cities);

        bw.flush();
        br.close();
        bw.close();
    }

    private static void printArr(int[][] cities) throws IOException {
        for(int i=1; i<=n; i++){
            for(int j=1; j<=n; j++){
                if(cities[i][j] == maxCost) bw.write(0+" ");
                else bw.write(cities[i][j]+" ");
            }
            if(i != n) bw.newLine();
        }
    }

    private static void floydWarshall() {
        for(int k=1; k<=n; k++){
            for(int i=1; i<=n; i++){
                for(int j=1; j<=n; j++){
                    if(cities[i][j] > cities[i][k] + cities[k][j]){
                        cities[i][j] = cities[i][k] + cities[k][j];
                    }
                }
            }
        }
    }
}